#pragma once
#include "pch.h"

namespace Axodox::Graphics::D3D12
{
  enum class ComparisonFunction
  {
    Unknown,
    Never = D3D12_COMPARISON_FUNC_NEVER,
    Less = D3D12_COMPARISON_FUNC_LESS,
    Equal = D3D12_COMPARISON_FUNC_EQUAL,
    LessOrEqual = D3D12_COMPARISON_FUNC_LESS_EQUAL,
    Greater = D3D12_COMPARISON_FUNC_GREATER,
    NotEqual = D3D12_COMPARISON_FUNC_NOT_EQUAL,
    GreaterOrEqual = D3D12_COMPARISON_FUNC_GREATER_EQUAL,
    Always = D3D12_COMPARISON_FUNC_ALWAYS
  };

  enum class Format : uint32_t
  {
    Unknown = DXGI_FORMAT_UNKNOWN,
    R32G32B32A32_Typeless = DXGI_FORMAT_R32G32B32A32_TYPELESS,
    R32G32B32A32_Float = DXGI_FORMAT_R32G32B32A32_FLOAT,
    R32G32B32A32_UInt = DXGI_FORMAT_R32G32B32A32_UINT,
    R32G32B32A32_SInt = DXGI_FORMAT_R32G32B32A32_SINT,
    R32G32B32_Typeless = DXGI_FORMAT_R32G32B32_TYPELESS,
    R32G32B32_Float = DXGI_FORMAT_R32G32B32_FLOAT,
    R32G32B32_UInt = DXGI_FORMAT_R32G32B32_UINT,
    R32G32B32_SInt = DXGI_FORMAT_R32G32B32_SINT,
    R16G16B16A16_Typeless = DXGI_FORMAT_R16G16B16A16_TYPELESS,
    R16G16B16A16_Float = DXGI_FORMAT_R16G16B16A16_FLOAT,
    R16G16B16A16_UNorm = DXGI_FORMAT_R16G16B16A16_UNORM,
    R16G16B16A16_UInt = DXGI_FORMAT_R16G16B16A16_UINT,
    R16G16B16A16_SNorm = DXGI_FORMAT_R16G16B16A16_SNORM,
    R16G16B16A16_SInt = DXGI_FORMAT_R16G16B16A16_SINT,
    R32G32_Typeless = DXGI_FORMAT_R32G32_TYPELESS,
    R32G32_Float = DXGI_FORMAT_R32G32_FLOAT,
    R32G32_UInt = DXGI_FORMAT_R32G32_UINT,
    R32G32_SInt = DXGI_FORMAT_R32G32_SINT,
    R32G8X24_Typeless = DXGI_FORMAT_R32G8X24_TYPELESS,
    D32_Float_S8X24_UInt = DXGI_FORMAT_D32_FLOAT_S8X24_UINT,
    R32_Float_X8X24_Typeless = DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS,
    X32_Typeless_G8X24_UInt = DXGI_FORMAT_X32_TYPELESS_G8X24_UINT,
    R10G10B10A2_Typeless = DXGI_FORMAT_R10G10B10A2_TYPELESS,
    R10G10B10A2_UNorm = DXGI_FORMAT_R10G10B10A2_UNORM,
    R10G10B10A2_UInt = DXGI_FORMAT_R10G10B10A2_UINT,
    R11G11B10_Float = DXGI_FORMAT_R11G11B10_FLOAT,
    R8G8B8A8_Typeless = DXGI_FORMAT_R8G8B8A8_TYPELESS,
    R8G8B8A8_UNorm = DXGI_FORMAT_R8G8B8A8_UNORM,
    R8G8B8A8_UNorm_SRGB = DXGI_FORMAT_R8G8B8A8_UNORM_SRGB,
    R8G8B8A8_UInt = DXGI_FORMAT_R8G8B8A8_UINT,
    R8G8B8A8_SNorm = DXGI_FORMAT_R8G8B8A8_SNORM,
    R8G8B8A8_SInt = DXGI_FORMAT_R8G8B8A8_SINT,
    R16G16_Typeless = DXGI_FORMAT_R16G16_TYPELESS,
    R16G16_Float = DXGI_FORMAT_R16G16_FLOAT,
    R16G16_UNorm = DXGI_FORMAT_R16G16_UNORM,
    R16G16_UInt = DXGI_FORMAT_R16G16_UINT,
    R16G16_SNorm = DXGI_FORMAT_R16G16_SNORM,
    R16G16_SInt = DXGI_FORMAT_R16G16_SINT,
    R32_Typeless = DXGI_FORMAT_R32_TYPELESS,
    D32_Float = DXGI_FORMAT_D32_FLOAT,
    R32_Float = DXGI_FORMAT_R32_FLOAT,
    R32_UInt = DXGI_FORMAT_R32_UINT,
    R32_SInt = DXGI_FORMAT_R32_SINT,
    R24G8_Typeless = DXGI_FORMAT_R24G8_TYPELESS,
    D24_UNorm_S8_UInt = DXGI_FORMAT_D24_UNORM_S8_UINT,
    R24_UNorm_X8_Typeless = DXGI_FORMAT_R24_UNORM_X8_TYPELESS,
    X24_Typeless_G8_UInt = DXGI_FORMAT_X24_TYPELESS_G8_UINT,
    R8G8_Typeless = DXGI_FORMAT_R8G8_TYPELESS,
    R8G8_UNorm = DXGI_FORMAT_R8G8_UNORM,
    R8G8_UInt = DXGI_FORMAT_R8G8_UINT,
    R8G8_SNorm = DXGI_FORMAT_R8G8_SNORM,
    R8G8_SInt = DXGI_FORMAT_R8G8_SINT,
    R16_Typeless = DXGI_FORMAT_R16_TYPELESS,
    R16_Float = DXGI_FORMAT_R16_FLOAT,
    D16_UNorm = DXGI_FORMAT_D16_UNORM,
    R16_UNorm = DXGI_FORMAT_R16_UNORM,
    R16_UInt = DXGI_FORMAT_R16_UINT,
    R16_SNorm = DXGI_FORMAT_R16_SNORM,
    R16_SInt = DXGI_FORMAT_R16_SINT,
    R8_Typeless = DXGI_FORMAT_R8_TYPELESS,
    R8_UNorm = DXGI_FORMAT_R8_UNORM,
    R8_UInt = DXGI_FORMAT_R8_UINT,
    R8_SNorm = DXGI_FORMAT_R8_SNORM,
    R8_SInt = DXGI_FORMAT_R8_SINT,
    A8_UNorm = DXGI_FORMAT_A8_UNORM,
    R1_UNorm = DXGI_FORMAT_R1_UNORM,
    R9G9B9E5_SHAREDEXP = DXGI_FORMAT_R9G9B9E5_SHAREDEXP,
    R8G8_B8G8_UNorm = DXGI_FORMAT_R8G8_B8G8_UNORM,
    G8R8_G8B8_UNorm = DXGI_FORMAT_G8R8_G8B8_UNORM,
    BC1_Typeless = DXGI_FORMAT_BC1_TYPELESS,
    BC1_UNorm = DXGI_FORMAT_BC1_UNORM,
    BC1_UNorm_SRGB = DXGI_FORMAT_BC1_UNORM_SRGB,
    BC2_Typeless = DXGI_FORMAT_BC2_TYPELESS,
    BC2_UNorm = DXGI_FORMAT_BC2_UNORM,
    BC2_UNorm_SRGB = DXGI_FORMAT_BC2_UNORM_SRGB,
    BC3_Typeless = DXGI_FORMAT_BC3_TYPELESS,
    BC3_UNorm = DXGI_FORMAT_BC3_UNORM,
    BC3_UNorm_SRGB = DXGI_FORMAT_BC3_UNORM_SRGB,
    BC4_Typeless = DXGI_FORMAT_BC4_TYPELESS,
    BC4_UNorm = DXGI_FORMAT_BC4_UNORM,
    BC4_SNorm = DXGI_FORMAT_BC4_SNORM,
    BC5_Typeless = DXGI_FORMAT_BC5_TYPELESS,
    BC5_UNorm = DXGI_FORMAT_BC5_UNORM,
    BC5_SNorm = DXGI_FORMAT_BC5_SNORM,
    B5G6R5_UNorm = DXGI_FORMAT_B5G6R5_UNORM,
    B5G5R5A1_UNorm = DXGI_FORMAT_B5G5R5A1_UNORM,
    B8G8R8A8_UNorm = DXGI_FORMAT_B8G8R8A8_UNORM,
    B8G8R8X8_UNorm = DXGI_FORMAT_B8G8R8X8_UNORM,
    R10G10B10_XR_BIAS_A2_UNorm = DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM,
    B8G8R8A8_Typeless = DXGI_FORMAT_B8G8R8A8_TYPELESS,
    B8G8R8A8_UNorm_SRGB = DXGI_FORMAT_B8G8R8A8_UNORM_SRGB,
    B8G8R8X8_Typeless = DXGI_FORMAT_B8G8R8X8_TYPELESS,
    B8G8R8X8_UNorm_SRGB = DXGI_FORMAT_B8G8R8X8_UNORM_SRGB,
    BC6H_Typeless = DXGI_FORMAT_BC6H_TYPELESS,
    BC6H_UF16 = DXGI_FORMAT_BC6H_UF16,
    BC6H_SF16 = DXGI_FORMAT_BC6H_SF16,
    BC7_Typeless = DXGI_FORMAT_BC7_TYPELESS,
    BC7_UNorm = DXGI_FORMAT_BC7_UNORM,
    BC7_UNorm_SRGB = DXGI_FORMAT_BC7_UNORM_SRGB,
    AYUV = DXGI_FORMAT_AYUV,
    Y410 = DXGI_FORMAT_Y410,
    Y416 = DXGI_FORMAT_Y416,
    NV12 = DXGI_FORMAT_NV12,
    P010 = DXGI_FORMAT_P010,
    P016 = DXGI_FORMAT_P016,
    O420 = DXGI_FORMAT_420_OPAQUE,
    YUY2 = DXGI_FORMAT_YUY2,
    Y210 = DXGI_FORMAT_Y210,
    Y216 = DXGI_FORMAT_Y216,
    NV11 = DXGI_FORMAT_NV11,
    AI44 = DXGI_FORMAT_AI44,
    IA44 = DXGI_FORMAT_IA44,
    P8 = DXGI_FORMAT_P8,
    A8P8 = DXGI_FORMAT_A8P8,
    B4G4R4A4_UNorm = DXGI_FORMAT_B4G4R4A4_UNORM,
    P208 = DXGI_FORMAT_P208,
    V208 = DXGI_FORMAT_V208,
    V408 = DXGI_FORMAT_V408,
    SamplerFeedbackMinMipOpaque = DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE,
    SamplerFeedbackMipRegionUsedOpaque = DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE,
  };
  
  enum class PrimitiveTopology
  {
    Undefined = D3D_PRIMITIVE_TOPOLOGY_UNDEFINED,
    PointList = D3D_PRIMITIVE_TOPOLOGY_POINTLIST,
    LineList = D3D_PRIMITIVE_TOPOLOGY_LINELIST,
    LineStrip = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP,
    TriangleList = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST,
    TriangleStrip = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP,
    LineListWithAdjacency = D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ,
    LineStripWithAdjacency = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ,
    TriangleListWithAdjacency = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ,
    TriangleStripWithAdjacency = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ,
    PatchList1 = D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST,
    PatchList2 = D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST,
    PatchList3 = D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST,
    PatchList4 = D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST
  };

  enum class PrimitiveTopologyType
  {
    Undefined = D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED,
    Point = D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT,
    Line = D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE,
    Triangle = D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE,
    Patch = D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH
  };

  enum class ResourceStates
  {
    Common = D3D12_RESOURCE_STATE_COMMON,
    VertexAndConstantBuffer = D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER,
    IndexBuffer = D3D12_RESOURCE_STATE_INDEX_BUFFER,
    RenderTarget = D3D12_RESOURCE_STATE_RENDER_TARGET,
    UnorderedAccess = D3D12_RESOURCE_STATE_UNORDERED_ACCESS,
    DepthWrite = D3D12_RESOURCE_STATE_DEPTH_WRITE,
    DepthRead = D3D12_RESOURCE_STATE_DEPTH_READ,
    NonPixelShaderResource = D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE,
    PixelShaderResource = D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE,
    StreamOut = D3D12_RESOURCE_STATE_STREAM_OUT,
    IndirectArgument = D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT,
    CopyDest = D3D12_RESOURCE_STATE_COPY_DEST,
    CopySource = D3D12_RESOURCE_STATE_COPY_SOURCE,
    ResolveDest = D3D12_RESOURCE_STATE_RESOLVE_DEST,
    ResolveSource = D3D12_RESOURCE_STATE_RESOLVE_SOURCE,
    RaytracingAccelerationStructure = D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE,
    ShadingRateSource = D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE,
    GenericRead = D3D12_RESOURCE_STATE_GENERIC_READ,
    AllShaderResource = D3D12_RESOURCE_STATE_ALL_SHADER_RESOURCE,
    Present = D3D12_RESOURCE_STATE_PRESENT,
    Predication = D3D12_RESOURCE_STATE_PREDICATION,
    VideoDecodeRead = D3D12_RESOURCE_STATE_VIDEO_DECODE_READ,
    VideoDecodeWrite = D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE,
    VideoProcessRead = D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ,
    VideoProcessWrite = D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE,
    VideoEncodeRead = D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ,
    VideoEncodeWrite = D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE
  };

  inline constexpr size_t BitsPerPixel(Format format)
  {
    switch (DXGI_FORMAT(format))
    {
    case DXGI_FORMAT_R32G32B32A32_TYPELESS:
    case DXGI_FORMAT_R32G32B32A32_FLOAT:
    case DXGI_FORMAT_R32G32B32A32_UINT:
    case DXGI_FORMAT_R32G32B32A32_SINT:
      return 128;

    case DXGI_FORMAT_R32G32B32_TYPELESS:
    case DXGI_FORMAT_R32G32B32_FLOAT:
    case DXGI_FORMAT_R32G32B32_UINT:
    case DXGI_FORMAT_R32G32B32_SINT:
      return 96;

    case DXGI_FORMAT_R16G16B16A16_TYPELESS:
    case DXGI_FORMAT_R16G16B16A16_FLOAT:
    case DXGI_FORMAT_R16G16B16A16_UNORM:
    case DXGI_FORMAT_R16G16B16A16_UINT:
    case DXGI_FORMAT_R16G16B16A16_SNORM:
    case DXGI_FORMAT_R16G16B16A16_SINT:
    case DXGI_FORMAT_R32G32_TYPELESS:
    case DXGI_FORMAT_R32G32_FLOAT:
    case DXGI_FORMAT_R32G32_UINT:
    case DXGI_FORMAT_R32G32_SINT:
    case DXGI_FORMAT_R32G8X24_TYPELESS:
    case DXGI_FORMAT_D32_FLOAT_S8X24_UINT:
    case DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS:
    case DXGI_FORMAT_X32_TYPELESS_G8X24_UINT:
    case DXGI_FORMAT_Y416:
    case DXGI_FORMAT_Y210:
    case DXGI_FORMAT_Y216:
      return 64;

    case DXGI_FORMAT_R10G10B10A2_TYPELESS:
    case DXGI_FORMAT_R10G10B10A2_UNORM:
    case DXGI_FORMAT_R10G10B10A2_UINT:
    case DXGI_FORMAT_R11G11B10_FLOAT:
    case DXGI_FORMAT_R8G8B8A8_TYPELESS:
    case DXGI_FORMAT_R8G8B8A8_UNORM:
    case DXGI_FORMAT_R8G8B8A8_UNORM_SRGB:
    case DXGI_FORMAT_R8G8B8A8_UINT:
    case DXGI_FORMAT_R8G8B8A8_SNORM:
    case DXGI_FORMAT_R8G8B8A8_SINT:
    case DXGI_FORMAT_R16G16_TYPELESS:
    case DXGI_FORMAT_R16G16_FLOAT:
    case DXGI_FORMAT_R16G16_UNORM:
    case DXGI_FORMAT_R16G16_UINT:
    case DXGI_FORMAT_R16G16_SNORM:
    case DXGI_FORMAT_R16G16_SINT:
    case DXGI_FORMAT_R32_TYPELESS:
    case DXGI_FORMAT_D32_FLOAT:
    case DXGI_FORMAT_R32_FLOAT:
    case DXGI_FORMAT_R32_UINT:
    case DXGI_FORMAT_R32_SINT:
    case DXGI_FORMAT_R24G8_TYPELESS:
    case DXGI_FORMAT_D24_UNORM_S8_UINT:
    case DXGI_FORMAT_R24_UNORM_X8_TYPELESS:
    case DXGI_FORMAT_X24_TYPELESS_G8_UINT:
    case DXGI_FORMAT_R9G9B9E5_SHAREDEXP:
    case DXGI_FORMAT_R8G8_B8G8_UNORM:
    case DXGI_FORMAT_G8R8_G8B8_UNORM:
    case DXGI_FORMAT_B8G8R8A8_UNORM:
    case DXGI_FORMAT_B8G8R8X8_UNORM:
    case DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM:
    case DXGI_FORMAT_B8G8R8A8_TYPELESS:
    case DXGI_FORMAT_B8G8R8A8_UNORM_SRGB:
    case DXGI_FORMAT_B8G8R8X8_TYPELESS:
    case DXGI_FORMAT_B8G8R8X8_UNORM_SRGB:
    case DXGI_FORMAT_AYUV:
    case DXGI_FORMAT_Y410:
    case DXGI_FORMAT_YUY2:
      return 32;

    case DXGI_FORMAT_P010:
    case DXGI_FORMAT_P016:
      return 24;

    case DXGI_FORMAT_R8G8_TYPELESS:
    case DXGI_FORMAT_R8G8_UNORM:
    case DXGI_FORMAT_R8G8_UINT:
    case DXGI_FORMAT_R8G8_SNORM:
    case DXGI_FORMAT_R8G8_SINT:
    case DXGI_FORMAT_R16_TYPELESS:
    case DXGI_FORMAT_R16_FLOAT:
    case DXGI_FORMAT_D16_UNORM:
    case DXGI_FORMAT_R16_UNORM:
    case DXGI_FORMAT_R16_UINT:
    case DXGI_FORMAT_R16_SNORM:
    case DXGI_FORMAT_R16_SINT:
    case DXGI_FORMAT_B5G6R5_UNORM:
    case DXGI_FORMAT_B5G5R5A1_UNORM:
    case DXGI_FORMAT_A8P8:
    case DXGI_FORMAT_B4G4R4A4_UNORM:
      return 16;

    case DXGI_FORMAT_NV12:
    case DXGI_FORMAT_420_OPAQUE:
    case DXGI_FORMAT_NV11:
      return 12;

    case DXGI_FORMAT_R8_TYPELESS:
    case DXGI_FORMAT_R8_UNORM:
    case DXGI_FORMAT_R8_UINT:
    case DXGI_FORMAT_R8_SNORM:
    case DXGI_FORMAT_R8_SINT:
    case DXGI_FORMAT_A8_UNORM:
    case DXGI_FORMAT_AI44:
    case DXGI_FORMAT_IA44:
    case DXGI_FORMAT_P8:
      return 8;

    case DXGI_FORMAT_R1_UNORM:
      return 1;

    case DXGI_FORMAT_BC1_TYPELESS:
    case DXGI_FORMAT_BC1_UNORM:
    case DXGI_FORMAT_BC1_UNORM_SRGB:
    case DXGI_FORMAT_BC4_TYPELESS:
    case DXGI_FORMAT_BC4_UNORM:
    case DXGI_FORMAT_BC4_SNORM:
      return 4;

    case DXGI_FORMAT_BC2_TYPELESS:
    case DXGI_FORMAT_BC2_UNORM:
    case DXGI_FORMAT_BC2_UNORM_SRGB:
    case DXGI_FORMAT_BC3_TYPELESS:
    case DXGI_FORMAT_BC3_UNORM:
    case DXGI_FORMAT_BC3_UNORM_SRGB:
    case DXGI_FORMAT_BC5_TYPELESS:
    case DXGI_FORMAT_BC5_UNORM:
    case DXGI_FORMAT_BC5_SNORM:
    case DXGI_FORMAT_BC6H_TYPELESS:
    case DXGI_FORMAT_BC6H_UF16:
    case DXGI_FORMAT_BC6H_SF16:
    case DXGI_FORMAT_BC7_TYPELESS:
    case DXGI_FORMAT_BC7_UNORM:
    case DXGI_FORMAT_BC7_UNORM_SRGB:
      return 8;

    default:
      return 0;
    }
  }

  inline constexpr bool HasAlpha(Format format)
  {
    switch (DXGI_FORMAT(format))
    {
    case DXGI_FORMAT_R32G32B32A32_TYPELESS:
    case DXGI_FORMAT_R32G32B32A32_FLOAT:
    case DXGI_FORMAT_R32G32B32A32_UINT:
    case DXGI_FORMAT_R32G32B32A32_SINT:
    case DXGI_FORMAT_R16G16B16A16_TYPELESS:
    case DXGI_FORMAT_R16G16B16A16_FLOAT:
    case DXGI_FORMAT_R16G16B16A16_UNORM:
    case DXGI_FORMAT_R16G16B16A16_UINT:
    case DXGI_FORMAT_R16G16B16A16_SNORM:
    case DXGI_FORMAT_R16G16B16A16_SINT:
    case DXGI_FORMAT_R10G10B10A2_TYPELESS:
    case DXGI_FORMAT_R10G10B10A2_UNORM:
    case DXGI_FORMAT_R10G10B10A2_UINT:
    case DXGI_FORMAT_R8G8B8A8_TYPELESS:
    case DXGI_FORMAT_R8G8B8A8_UNORM:
    case DXGI_FORMAT_R8G8B8A8_UNORM_SRGB:
    case DXGI_FORMAT_R8G8B8A8_UINT:
    case DXGI_FORMAT_R8G8B8A8_SNORM:
    case DXGI_FORMAT_R8G8B8A8_SINT:
    case DXGI_FORMAT_A8_UNORM:
    case DXGI_FORMAT_BC1_TYPELESS:
    case DXGI_FORMAT_BC1_UNORM:
    case DXGI_FORMAT_BC1_UNORM_SRGB:
    case DXGI_FORMAT_BC2_TYPELESS:
    case DXGI_FORMAT_BC2_UNORM:
    case DXGI_FORMAT_BC2_UNORM_SRGB:
    case DXGI_FORMAT_BC3_TYPELESS:
    case DXGI_FORMAT_BC3_UNORM:
    case DXGI_FORMAT_BC3_UNORM_SRGB:
    case DXGI_FORMAT_B5G5R5A1_UNORM:
    case DXGI_FORMAT_B8G8R8A8_UNORM:
    case DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM:
    case DXGI_FORMAT_B8G8R8A8_TYPELESS:
    case DXGI_FORMAT_B8G8R8A8_UNORM_SRGB:
    case DXGI_FORMAT_BC7_TYPELESS:
    case DXGI_FORMAT_BC7_UNORM:
    case DXGI_FORMAT_BC7_UNORM_SRGB:
    case DXGI_FORMAT_AYUV:
    case DXGI_FORMAT_Y410:
    case DXGI_FORMAT_Y416:
    case DXGI_FORMAT_AI44:
    case DXGI_FORMAT_IA44:
    case DXGI_FORMAT_A8P8:
    case DXGI_FORMAT_B4G4R4A4_UNORM:
      return true;

    default:
      return false;
    }
  }

  inline uint32_t GetSubresourceIndex(uint32_t mipSlice, uint32_t arraySlice, uint32_t planeSlice, uint32_t mipLevels, uint32_t arraySize)
  {
    return mipSlice + arraySlice * mipLevels + planeSlice * mipLevels * arraySize;
  }

  inline const D3D12_RANGE EmptyRange{ 0, 0 };
}